# Mutate events to be suitable for pushing to Cloudwatch Logs
filter {
  if "kubernetes" and "docker" in [tags] {
    # check if message looks like json and try to decode it
    if [message] =~ /^{.*}$/ {
      json {
        source => "message"
        target => "message"
      }
    }

    # check if message["log"] looks like json and try to decode it and flatten
    # log fields out into a message field
    if [message][log] =~ /^{.*}$/ {
      json {
        source => "[message][log]"
        target => "[message]"
        remove_field => [ "[message][log]" ]
      }
    }

    # Grab a timestamp from the actual message, rather than at the point of
    # which events arrive
    date {
      match => ["[message][time]", "ISO8601"]
    }

    # Extract kubernetes metadata
    kubernetes {
      add_tag => ["kubernetes_filtered"]
    }
    mutate {
      merge => { "message" => "kubernetes" }
    }
    json_encode {
      source => "message"
      add_tag => ["json_encoded"]
    }
  }
}
